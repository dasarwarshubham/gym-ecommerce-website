{"version":3,"file":"static/js/contactPage.221f2a10.chunk.js","mappings":"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","sources":["pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\nimport {\n  FormButton,\n  FormField,\n  FormikForm\n} from \"../components/form\";\nimport {\n  Error,\n  Success\n} from '../components/response';\n\nimport { publicAxios } from \"../services/axiosInstance\";\n\nimport { API_ROUTES, EMAIL, HOME } from \"../constants/routes\";\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email ID\"),\n  subject: Yup.string().required().label(\"Subject\"),\n  message: Yup.string()\n    .required(\"Enter your message\")\n    .label(\"Message\")\n    .max(600),\n});\n\n\nconst ContactPage = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  const handleClick = async (values, setSubmitting, resetForm) => {\n    await publicAxios({\n      method: \"POST\",\n      url: `${API_ROUTES.contact}`,\n      data: values,\n    }).then(() => {\n      setStatus(\"success\");\n    }).catch((error) => {\n      setStatus(\"error\");\n      setError(error);\n      console.log(error);\n    }).finally(() => {\n      setSubmitting(false);\n      resetForm();\n    })\n  };\n  return (\n    <Container className=\"my-5 py-5\" style={{ minHeight: \"65vh\" }}>\n      <Row className=\"justify-content-center align-items-center mx-0\">\n        {status === \"success\" && (\n          <Col xs={12} md={7} lg={6}>\n            <Success title=\"Message recieved successfully!\">\n              <>We will contact you shortly.</>\n              <br />\n              <Link className=\"btn btn-dark mt-4\" to={HOME}>Continue</Link>\n            </Success>\n          </Col>\n        )}\n        {status === \"error\" && (\n          <Col xs={12} md={7} lg={6}>\n            <Error\n              title=\"Message not sent\"\n              error={error}\n              action={() => setStatus(null)}\n            />\n          </Col>\n        )}\n        {status === null && (\n          <>\n            <Col xs={12} md={9} lg={8} xl={7} className=\"text-center text-sm-start\">\n              <h1>Get in Touch</h1>\n              <p className=\"mb-5\">Let's Make Your Fitness Journey Extraordinary!</p>\n            </Col>\n            <Col xs={12} md={9} lg={8} xl={7}>\n              <FormikForm\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values, { setSubmitting, resetForm }) =>\n                  handleClick(values, setSubmitting, resetForm)\n                }\n              >\n                <FormField label=\"Name\" name=\"name\" />\n                <FormField label=\"Email address\" type=\"email\" name=\"email\" />\n                <FormField label=\"Subject\" name=\"subject\" />\n                <FormField\n                  label=\"Write a message\"\n                  as=\"textarea\"\n                  style={{ minHeight: \"200px\" }}\n                  name=\"message\"\n                />\n\n                <div className=\"d-grid col-12 col-sm-5 col-md-4 mb-5 justify-content-center justify-content-sm-start\">\n                  <FormButton>Submit</FormButton>\n                </div>\n\n                <p className=\"text-center text-sm-start\">\n                  Or email us at&nbsp;\n                  <a variant=\"link\" href={EMAIL}>\n                    hello.fitflex@gmail.com\n                  </a>\n                </p>\n              </FormikForm>\n            </Col>\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ContactPage;\n"],"names":["initialValues","name","email","subject","message","validationSchema","Yup","shape","required","label","max","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","wrap","_context","prev","next","publicAxios","method","url","concat","API_ROUTES","contact","data","then","catch","console","log","finally","stop","_x","_x2","_x3","apply","arguments","_jsx","Container","className","style","minHeight","children","_jsxs","Row","Col","xs","md","lg","Success","title","_Fragment","Link","to","HOME","Error","action","xl","FormikForm","onSubmit","_ref2","FormField","type","as","FormButton","variant","href","EMAIL"],"sourceRoot":""}