{"version":3,"file":"static/js/paymentPage.0d06e677.chunk.js","mappings":"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","sources":["components/form/Form.js","components/form/FormField.js","components/form/FormButton.js","components/form/FormRadio.js","services/paymentAPI.js","pages/checkout/Payment.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nfunction FormikForm({\n  initialValues,\n  onSubmit,\n  validationSchema,\n  enableReinitialize,\n  children,\n  ...otherProps\n}) {\n  return (\n    <Formik\n      enableReinitialize={enableReinitialize}\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {() => <Form {...otherProps}>{children}</Form>}\n    </Formik>\n  );\n}\n\nexport default FormikForm;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\nimport { FormSelect } from \"react-bootstrap\";\n\nconst FormField = ({\n  label,\n  araiLabel,\n  type = \"text\",\n  modal = false,\n  name,\n  fieldClass,\n  children,\n  ...otherProps\n}) => {\n  const { handleChange, values, errors, touched, setFieldValue } =\n    useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        {label && (\n          <FormLabel column xs={12} md={4}>\n            {label}\n          </FormLabel>\n        )}\n        <Col xs={12} md={8}>\n          {type === \"select\" ? (\n            <FormSelect\n              aria-label={label}\n              name={name}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormSelect>\n          ) : (\n            <FormControl\n              aria-label={label}\n              type={type}\n              name={name}\n              value={values[name]}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormControl>\n          )}\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  if (type === \"select\") {\n    return (\n      <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n        {label && (\n          <FormLabel>{label}</FormLabel>\n        )}\n        <FormSelect\n          aria-label={label}\n          name={name}\n          onChange={handleChange}\n          isInvalid={touched[name] && !!errors[name]}\n          placeholder=\"Type here\"\n          {...otherProps}\n        >\n          {children}\n        </FormSelect>\n        <Feedback type=\"invalid\">{errors[name]}</Feedback>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      {label && (\n        <FormLabel>{label}</FormLabel>\n      )}\n      <FormControl\n        aria-label={label}\n        type={type}\n        name={name}\n        value={type === \"file\" ? null : values[name]}\n        onChange={\n          type !== \"file\"\n            ? handleChange\n            : (event) => setFieldValue(name, event.target.files[0])\n        }\n        isInvalid={touched[name] && !!errors[name]}\n        placeholder=\"Type here\"\n        {...otherProps}\n      >\n        {children}\n      </FormControl>\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useFormikContext } from \"formik\";\n\nconst FormButton = ({\n  variant = \"primary\",\n  type = \"submit\",\n  children,\n  ...otherProps\n}) => {\n  const { handleSubmit, isSubmitting } = useFormikContext();\n  return (\n    <Button\n      variant={variant}\n      onClick={!isSubmitting ? handleSubmit : null}\n      disabled={isSubmitting}\n      type={type}\n      style={{ minWidth: \"120px\" }}\n      {...otherProps}\n    >\n      {isSubmitting ? (\n        <Spinner as=\"span\" size=\"sm\" animation=\"border\" />\n      ) : (\n        children\n      )}\n    </Button>\n  );\n};\n\nexport default FormButton;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\n\nconst FormRadio = ({\n  label,\n  araiLabel,\n  modal = false,\n  type = \"radio\",\n  name,\n  fieldClass,\n  children,\n  options,\n  ...otherProps\n}) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        <FormLabel column xs={12} md={4}>\n          {label}\n        </FormLabel>\n        <Col xs={12} md={8}>\n          <div key={`inline-radio`} className=\"h-100 d-flex align-items-center\">\n            {options.map((option) => (\n              <FormCheck\n                inline\n                label={option.label}\n                name={name}\n                type={type}\n                aria-label={option.label}\n                onChange={() => setFieldValue(name, option.value)}\n                id={`inline-radio-${option.value}`}\n                key={`inline-radio-${option.value}`}\n                isInvalid={touched[name] && !!errors[name]}\n                checked={option.value === values[name]}\n                {...otherProps}\n              />\n            ))}\n          </div>\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      <FormLabel>{label}</FormLabel>\n      <br />\n      {options.map((option) => (\n        <FormCheck\n          inline\n          label={option.label}\n          name={name}\n          type={type}\n          aria-label={option.label}\n          onChange={() => setFieldValue(name, option.value)}\n          id={`inline-radio-${option.value}`}\n          key={`inline-radio-${option.value}`}\n          isInvalid={touched[name] && !!errors[name]}\n          checked={option.value === values[name]}\n          {...otherProps}\n        />\n      ))}\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormRadio;\n","import { userAxios } from \"./axiosInstance\";\nimport { API_ROUTES } from \"../constants/routes\";\n\nexport const placeOrder = async () => {\n  try {\n    const cartId = localStorage.getItem(\"cartId\");\n    const response = await userAxios({\n      method: \"POST\",\n      url: `${API_ROUTES.order}/`,\n      data: { cart_id: cartId },\n    });\n    localStorage.removeItem(\"cartId\");\n    return response.data;\n  } catch (error) {\n    const errorMsg = error.message;\n    throw new Error(errorMsg);\n  }\n};\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { CONFIRMATION, REVIEW } from \"../../constants/routes\";\n\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\n\nimport Loader from \"../../components/loader/Loader\";\nimport {\n  FormikForm,\n  FormButton,\n  FormRadio\n} from \"../../components/form\";\n\n// import required redux selectors\nimport {\n  selectCartItems,\n  selectLoadingStatus,\n} from \"../../redux/checkout/cartSelectors\";\nimport { placeOrder } from \"../../services/paymentAPI\";\nimport { fetchCart, createNewCart } from \"../../redux/checkout/cartActions\";\nimport { fetchAccountData, fetchAccountOrder } from \"../../redux/account/accountActions\";\n\nconst PaymentPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cartLoading = useSelector(selectLoadingStatus);\n  const cartItems = useSelector(selectCartItems);\n\n  if (cartLoading) {\n    return <Loader />;\n  }\n\n  const handleClick = async (values, setSubmitting, resetForm) => {\n    try {\n      const response = await placeOrder(values);\n      if (response) {\n        dispatch(fetchCart())\n          .unwrap()\n          .catch((error) => {\n            dispatch(fetchAccountData());\n            dispatch(fetchAccountOrder());\n            dispatch(createNewCart());\n          });\n        // dispatch(clearCart());\n        // navigate(PAYMENT_SUCCESS);\n      }\n      setSubmitting(false);\n    } catch (error) {\n      console.log(error);\n      // navigate(PAYMENT_FAILURE);\n    } finally {\n      setSubmitting(false);\n      resetForm();\n      navigate(CONFIRMATION);\n    }\n  };\n\n  return (\n    <Container className=\"my-5 py-5\">\n      <Row className=\"justify-content-center\">\n        <Col xs={12} md={8} lg={6}>\n          <h2 className=\"d-flex align-items-center\">\n            Select Payment Method&nbsp;\n          </h2>\n          {cartItems?.length === 0 ? (\n            <p>Your cart is empty.</p>\n          ) : (\n            <FormikForm\n              initialValues={{ paymentMethod: \"\" }}\n              validationSchema={Yup.object({\n                paymentMethod: Yup.string()\n                  .required()\n                  .label(\"Payment Method\")\n                  .oneOf([\"cod\", \"paytm\"]),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) =>\n                handleClick(values, setSubmitting, resetForm)\n              }\n            >\n              <Card>\n                <Card.Body\n                  style={{ minHeight: \"25vh\" }}\n                  className=\"d-flex justify-content-center align-items-center\"\n                >\n                  <div>\n                    <p className=\"h5 me-5 my-4\">Payment Method:</p>\n                    <FormRadio\n                      name=\"paymentMethod\"\n                      options={[\n                        { label: \"Cash On Delivery\", value: \"cod\" },\n                        // { label: \"Paytm\", value: \"paytm\" },\n                      ]}\n                    />\n                  </div>\n                </Card.Body>\n                <Card.Footer className=\"d-flex justify-content-center\">\n                  <Button\n                    as={Link}\n                    to={REVIEW}\n                    variant=\"primary\"\n                    className=\"me-3\"\n                  >\n                    Back to Review\n                  </Button>\n                  <FormButton>Proceed to Confirmation</FormButton>\n                </Card.Footer>\n              </Card>\n            </FormikForm>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PaymentPage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","initialValues","onSubmit","validationSchema","enableReinitialize","children","otherProps","_objectWithoutProperties","_excluded","_jsx","Formik","Form","_objectSpread","label","_ref$type","araiLabel","type","_ref$modal","modal","name","fieldClass","_useFormikContext","useFormikContext","handleChange","values","errors","touched","setFieldValue","_jsxs","FormGroup","as","Row","controlId","className","FormLabel","column","xs","md","Col","FormSelect","onChange","isInvalid","placeholder","FormControl","value","Feedback","event","target","files","_ref$variant","variant","handleSubmit","isSubmitting","Button","onClick","disabled","style","minWidth","Spinner","size","animation","options","map","option","FormCheck","inline","id","concat","checked","placeOrder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cartId","response","errorMsg","wrap","_context","prev","next","localStorage","getItem","userAxios","method","url","API_ROUTES","order","data","cart_id","sent","removeItem","abrupt","t0","message","Error","stop","apply","arguments","navigate","useNavigate","dispatch","useDispatch","cartLoading","useSelector","selectLoadingStatus","cartItems","selectCartItems","Loader","handleClick","setSubmitting","resetForm","fetchCart","unwrap","catch","error","fetchAccountData","fetchAccountOrder","createNewCart","console","log","CONFIRMATION","finish","_x","_x2","_x3","Container","lg","length","FormikForm","paymentMethod","Yup","required","oneOf","_ref2","Card","Body","minHeight","FormRadio","Footer","Link","to","REVIEW","FormButton","CardImg","React","ref","bsPrefix","_ref$as","Component","props","prefix","useBootstrapPrefix","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Text","Header","ImgOverlay"],"sourceRoot":""}