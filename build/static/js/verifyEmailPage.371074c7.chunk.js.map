{"version":3,"file":"static/js/verifyEmailPage.371074c7.chunk.js","mappings":"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","sources":["components/form/Form.js","components/form/FormField.js","components/form/FormButton.js","components/form/FormRadio.js","components/response/Error.js","components/response/Success.js","pages/account/VerifyEmailPage.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nfunction FormikForm({\n  initialValues,\n  onSubmit,\n  validationSchema,\n  enableReinitialize,\n  children,\n  ...otherProps\n}) {\n  return (\n    <Formik\n      enableReinitialize={enableReinitialize}\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {() => <Form {...otherProps}>{children}</Form>}\n    </Formik>\n  );\n}\n\nexport default FormikForm;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\nimport { FormSelect } from \"react-bootstrap\";\n\nconst FormField = ({\n  label,\n  araiLabel,\n  type = \"text\",\n  modal = false,\n  name,\n  fieldClass,\n  children,\n  ...otherProps\n}) => {\n  const { handleChange, values, errors, touched, setFieldValue } =\n    useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        {label && (\n          <FormLabel column xs={12} md={4}>\n            {label}\n          </FormLabel>\n        )}\n        <Col xs={12} md={8}>\n          {type === \"select\" ? (\n            <FormSelect\n              aria-label={label}\n              name={name}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormSelect>\n          ) : (\n            <FormControl\n              aria-label={label}\n              type={type}\n              name={name}\n              value={values[name]}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormControl>\n          )}\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  if (type === \"select\") {\n    return (\n      <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n        {label && (\n          <FormLabel>{label}</FormLabel>\n        )}\n        <FormSelect\n          aria-label={label}\n          name={name}\n          onChange={handleChange}\n          isInvalid={touched[name] && !!errors[name]}\n          placeholder=\"Type here\"\n          {...otherProps}\n        >\n          {children}\n        </FormSelect>\n        <Feedback type=\"invalid\">{errors[name]}</Feedback>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      {label && (\n        <FormLabel>{label}</FormLabel>\n      )}\n      <FormControl\n        aria-label={label}\n        type={type}\n        name={name}\n        value={type === \"file\" ? null : values[name]}\n        onChange={\n          type !== \"file\"\n            ? handleChange\n            : (event) => setFieldValue(name, event.target.files[0])\n        }\n        isInvalid={touched[name] && !!errors[name]}\n        placeholder=\"Type here\"\n        {...otherProps}\n      >\n        {children}\n      </FormControl>\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useFormikContext } from \"formik\";\n\nconst FormButton = ({\n  variant = \"primary\",\n  type = \"submit\",\n  children,\n  ...otherProps\n}) => {\n  const { handleSubmit, isSubmitting } = useFormikContext();\n  return (\n    <Button\n      variant={variant}\n      onClick={!isSubmitting ? handleSubmit : null}\n      disabled={isSubmitting}\n      type={type}\n      style={{ minWidth: \"120px\" }}\n      {...otherProps}\n    >\n      {isSubmitting ? (\n        <Spinner as=\"span\" size=\"sm\" animation=\"border\" />\n      ) : (\n        children\n      )}\n    </Button>\n  );\n};\n\nexport default FormButton;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\n\nconst FormRadio = ({\n  label,\n  araiLabel,\n  modal = false,\n  type = \"radio\",\n  name,\n  fieldClass,\n  children,\n  options,\n  ...otherProps\n}) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        <FormLabel column xs={12} md={4}>\n          {label}\n        </FormLabel>\n        <Col xs={12} md={8}>\n          <div key={`inline-radio`} className=\"h-100 d-flex align-items-center\">\n            {options.map((option) => (\n              <FormCheck\n                inline\n                label={option.label}\n                name={name}\n                type={type}\n                aria-label={option.label}\n                onChange={() => setFieldValue(name, option.value)}\n                id={`inline-radio-${option.value}`}\n                key={`inline-radio-${option.value}`}\n                isInvalid={touched[name] && !!errors[name]}\n                checked={option.value === values[name]}\n                {...otherProps}\n              />\n            ))}\n          </div>\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      <FormLabel>{label}</FormLabel>\n      <br />\n      {options.map((option) => (\n        <FormCheck\n          inline\n          label={option.label}\n          name={name}\n          type={type}\n          aria-label={option.label}\n          onChange={() => setFieldValue(name, option.value)}\n          id={`inline-radio-${option.value}`}\n          key={`inline-radio-${option.value}`}\n          isInvalid={touched[name] && !!errors[name]}\n          checked={option.value === values[name]}\n          {...otherProps}\n        />\n      ))}\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormRadio;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport Button from \"react-bootstrap/Button\";\nimport BsCard from \"react-bootstrap/Card\";\nimport { FaCircleExclamation } from \"react-icons/fa6\";\n\nconst Card = styled(BsCard)`\n  background-color: #ffe4e4;\n  border: 1px solid #dc3545;\n  border-radius: 5px;\n  padding: 20px;\n  text-align: center;\n\n  .error-icon {\n    font-size: 48px;\n    color: #dc3545;\n    margin-bottom: 3rem;\n  }\n\n  .error-button {\n    margin-top: 20px;\n  }\n`;\n\nconst Error = ({ title, action, error }) => {\n  return (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <FaCircleExclamation className=\"error-icon\" />\n        <Card.Title className=\"text-danger text-center\">{title}</Card.Title>\n        <Card.Text className=\"text-center\">\n          {error || <>An error occurred. Please try again.</>}\n        </Card.Text>\n        <Button variant=\"danger\" className=\"error-button\" onClick={action}>\n          Retry\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nimport BsCard from 'react-bootstrap/Card';\nimport { FaRegCircleCheck } from 'react-icons/fa6';\n\nconst Card = styled(BsCard)`\n    background-color: #f3ffef;\n    border: 1px solid #198754;\n    border-radius: 5px;\n    padding: 20px;\n    text-align: center;\n\n    .success-icon {\n        font-size: 48px;\n        color: #198754;\n        margin-bottom: 3rem;\n    }\n`;\n\nconst Success = ({ children, title, status }) => {\n    return (\n        <Card className=\"mt-4\">\n            <Card.Body>\n                <FaRegCircleCheck className='success-icon' />\n                {title && (\n                    <Card.Title className=\"text-success text-center\">\n                        {title}\n                    </Card.Title>\n                )}\n                <Card.Text className=\"text-center\">\n                    {status && <>{status}<br/></>}\n                    {children}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default Success;","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\n\nimport { FormButton, FormField, FormikForm } from \"../../components/form\";\nimport {\n    Error,\n    Success\n} from '../../components/response';\n\nimport { LOGIN } from '../../constants/routes';\n\nimport { newVerifyEmailToken, verifyEmail } from \"../../services/accountAPI\";\n\nconst VerifyEmailPage = () => {\n    const { user_id, token } = useParams();\n\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [verificationStatus, setVerificationStatus] = useState(null);\n\n\n    const handleClick = async (values, setSubmitting, resetForm) => {\n        const { user_id, token } = values;\n        setError(null);\n        try {\n            const response = await verifyEmail(user_id, token);\n            setVerificationStatus(\"success\");\n            if (response.status === 200)\n                setStatus(response.data);\n        } catch (error) {\n            console.log(error);\n            setError(error.message);\n            setVerificationStatus(\"error\");\n        } finally {\n            setSubmitting(false);\n            resetForm();\n        }\n    };\n\n    const handleNewTokenRequest = async () => {\n        setError(null);\n        try {\n            const response = await newVerifyEmailToken(user_id, token);\n            setVerificationStatus(\"success\");\n            if (response.status === 200)\n                setStatus(response.data);\n        } catch (error) {\n            console.log(error);\n            setError(error.message);\n            setVerificationStatus(\"error\");\n        }\n    };\n\n    return (\n        <Container>\n            <Row\n                className=\"justify-content-center align-items-center mx-0\"\n                style={{ minHeight: \"70vh\" }}\n            >\n                {verificationStatus === \"success\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Success\n                            title=\"Verification Successful\"\n                            status={status}\n                        >\n                            <>Your email has been verified successfully.</>\n                            <br /> You can now <Link to={LOGIN}>login</Link>.\n                        </Success>\n                    </Col>\n                )}\n                {verificationStatus === \"error\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Error\n                            title=\"Verification Failed\"\n                            error={error}\n                            action={() => handleNewTokenRequest()}\n                        />\n                    </Col>\n                )}\n                {verificationStatus === null && (\n                    <Col xs={12} md={9} lg={8} xl={7}>\n                        <h1 className=\"text-center mb-4\">Email Verification</h1>\n                        <FormikForm\n                            initialValues={{\n                                user_id: user_id,\n                                token: token,\n                            }}\n                            validationSchema={Yup.object().shape({\n                                user_id: Yup.string()\n                                    .label(\"User Id\")\n                                    .required('User Id is required'),\n                                token: Yup.string()\n                                    .label(\"Verification Token\")\n                                    .required('verification token is required')\n                            })\n                            }\n                            onSubmit={async (values, { setSubmitting, resetForm }) =>\n                                handleClick(values, setSubmitting, resetForm)\n                            }\n                        >\n                            {error && <p className=\"text-danger text-center\">{JSON.stringify(error)}</p>}\n                            <FormField type=\"hidden\" name=\"user_id\" />\n                            <FormField type=\"hidden\" name=\"token\" />\n\n                            <div className=\"d-grid col-9 col-mobile-8 col-sm-5 col-md-4 col-lg-3 mx-auto mb-4\">\n                                <FormButton>Verify</FormButton>\n                            </div>\n                        </FormikForm>\n                    </Col>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\n\nexport default VerifyEmailPage;\n"],"names":["_ref","initialValues","onSubmit","validationSchema","enableReinitialize","children","otherProps","_objectWithoutProperties","_excluded","_jsx","Formik","Form","_objectSpread","label","_ref$type","araiLabel","type","_ref$modal","modal","name","fieldClass","_useFormikContext","useFormikContext","handleChange","values","errors","touched","setFieldValue","_jsxs","FormGroup","as","Row","controlId","className","FormLabel","column","xs","md","Col","FormSelect","onChange","isInvalid","placeholder","FormControl","value","Feedback","event","target","files","_ref$variant","variant","handleSubmit","isSubmitting","Button","onClick","disabled","style","minWidth","Spinner","size","animation","options","map","option","FormCheck","inline","id","concat","checked","Card","styled","BsCard","withConfig","displayName","componentId","title","action","error","Body","FaCircleExclamation","Title","Text","_Fragment","status","FaRegCircleCheck","_useParams","useParams","user_id","token","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","setStatus","_useState5","_useState6","verificationStatus","setVerificationStatus","handleClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setSubmitting","resetForm","response","wrap","_context","prev","next","verifyEmail","sent","data","t0","console","log","message","finish","stop","_x","_x2","_x3","apply","arguments","handleNewTokenRequest","_ref2","_callee2","_context2","newVerifyEmailToken","Container","minHeight","lg","Success","Link","to","LOGIN","Error","xl","FormikForm","Yup","shape","required","_ref4","_callee3","_ref3","_context3","abrupt","_x4","_x5","JSON","stringify","FormField","FormButton"],"sourceRoot":""}