{"version":3,"file":"static/js/blogListPage.39cbddf1.chunk.js","mappings":"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","sources":["components/cards/BlogCard.js","pages/blogs/BlogList.js","redux/blog/blogSelectors.js"],"sourcesContent":["// src/components/BlogCard.js\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport { BLOGS } from \"../../constants/routes\";\n\nconst BlogCard = ({ blog }) => {\n  return (\n    <Card\n      as={Link}\n      to={`${BLOGS}/${blog.slug}`}\n      aria-label={`Go to ${blog.title.replaceAll('-', '')}`}\n      className=\"h-100 link-offset-1 link-offset-1-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover\"\n    >\n      <div className=\"ratio ratio-4x3\">\n        <Card.Img variant=\"top\" className=\"img-fluid w-100 object-fit-cover\" src={blog.image} alt={blog.title.replaceAll('-', '')} />\n      </div>\n      <Card.Body>\n        <Card.Title className=\"text-truncate\">{blog.title}</Card.Title>\n        <Card.Text className=\"text-truncate\">{blog.description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default BlogCard;\n","import React, { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n\n// import custom hook\nimport useInitialLoad from \"../../hooks/useInitialLoad\";\n\n// import required Components\nimport Loader from \"../../components/loader/Loader\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BlogCard from \"../../components/cards/BlogCard\";\n\nimport { MdOutlineSearch } from \"react-icons/md\";\n\nimport MyPagination from \"../../components/pagination\";\nimport {\n  FormButton,\n  FormField,\n  FormikForm,\n} from \"../../components/form\";\n\n// import required redux actions\nimport { retrieveBlogs } from \"../../redux/blog/blogActions\";\n\n// import required redux selectors\nimport { selectAllBlogs, selectBlogCount, selectError } from \"../../redux/blog/blogSelectors\";\nimport { BLOGS } from \"../../constants/routes\";\n\nconst BlogListPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch();\n  const blogs = useSelector(selectAllBlogs);\n  const blogCount = useSelector(selectBlogCount);\n  const error = useSelector(selectError);\n  const { initialLoad } = useInitialLoad(blogs);\n\n  const queryParams = new URLSearchParams(location.search);\n  const currentPage = parseInt(queryParams.get('page')) || 1;\n  const searchQuery = queryParams.get('search');\n  const blogsPerPage = 20;\n  const totalPages = Math.ceil(blogCount / blogsPerPage); // (blogCount/blogsPerPage)\n\n  const handlePageChange = (page) => {\n    let newURL = `${BLOGS}?page=${page}`;\n    if (searchQuery) {\n      newURL = `${BLOGS}/?search=${searchQuery}&page=${page}`;\n    }\n    navigate(newURL);\n  };\n\n  useEffect(() => {\n    dispatch(retrieveBlogs({ searchQuery, currentPage }));\n  }, [dispatch, searchQuery, currentPage]);\n\n  const handleClick = async (values, setSubmitting, resetForm) => {\n    navigate(`${BLOGS}/?search=${values.search}`)\n  };\n\n  if (initialLoad && !error) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"75vh\" }}\n      >\n        <h1>{error}</h1>\n      </div>\n    );\n  }\n  if (blogCount > 0) {\n    return (\n      <Container className=\"my-5 py-5\" style={{ minHeight: \"65vh\" }}>\n        <Row className=\"g-5 mx-0 mb-5 justify-content-center\">\n          <Col xs={12} lg={9} xl={7}>\n            <FormikForm\n              initialValues={{\n                search: \"\",\n                page: currentPage\n              }}\n              validationSchema={Yup.object().shape({\n                search: Yup.string().required().label(\"Search\"),\n              })}\n              onSubmit={async (values, { setSubmitting, resetForm }) =>\n                handleClick(values, setSubmitting, resetForm)\n              }\n              enableReinitialize\n              className=\"row mx-0 g-2 g-md-4\"\n            >\n              <FormField\n                name=\"search\"\n                placeholder=\"Search blogs here...\"\n                fieldClass=\"col col-md-9\"\n              />\n              <FormButton className=\"col-2 col-md-3\" style={{ minWidth: 'unset' }}>\n                <MdOutlineSearch size={20} />\n                <span className=\"d-none d-md-inline-flex\">\n                  Search\n                </span>\n              </FormButton>\n            </FormikForm>\n          </Col>\n        </Row>\n        <Row className=\"g-5 my-5 mx-0\">\n          {blogs.map((blog) => (\n            <Col key={blog.id} sm={6} md={4}>\n              <BlogCard blog={blog} />\n            </Col>\n          ))}\n        </Row>\n        <MyPagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          handlePageChange={handlePageChange}\n        />\n      </Container>\n    )\n  } else {\n    return (\n      <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"65vh\" }}>\n        <p>We will soon add new blogs. Stay tuned.</p>\n      </Container>\n    )\n  }\n};\n\nexport default BlogListPage;\n","import { createSelector } from \"reselect\";\n\nconst selectBlogSlice = (state) => state.blogs;\n\nexport const selectAllBlogs = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogList\n);\n\nexport const selectBlogCount = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogCount\n);\n\nexport const selectSelectedBlog = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogDetails\n);\n\nexport const selectLoadingStatus = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.loading\n);\n\nexport const selectError = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.error\n);\n\n// export const selectAllBlogs = createSelector(\n//   [selectBlogSlice, selectLoadingStatus],\n//   (blogSlice, loading) => ({\n//     blogs: blogSlice.blogList,\n//     loading,\n//   })\n// );\n"],"names":["_ref","blog","_jsxs","Card","as","Link","to","concat","BLOGS","slug","title","replaceAll","className","children","_jsx","Img","variant","src","image","alt","Body","Title","Text","description","location","useLocation","navigate","useNavigate","dispatch","useDispatch","blogs","useSelector","selectAllBlogs","blogCount","selectBlogCount","error","selectError","initialLoad","useInitialLoad","queryParams","URLSearchParams","search","currentPage","parseInt","get","searchQuery","totalPages","Math","ceil","useEffect","retrieveBlogs","handleClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","wrap","_context","prev","next","stop","_x","_x2","_x3","apply","arguments","Loader","style","height","Container","minHeight","Row","Col","xs","lg","xl","FormikForm","initialValues","page","validationSchema","Yup","shape","required","label","onSubmit","_ref3","_callee2","_ref2","_context2","abrupt","_x4","_x5","enableReinitialize","FormField","name","placeholder","fieldClass","FormButton","minWidth","MdOutlineSearch","size","map","sm","md","BlogCard","id","MyPagination","handlePageChange","newURL","selectBlogSlice","state","createSelector","blogSlice","blogList","selectSelectedBlog","blogDetails","loading"],"sourceRoot":""}