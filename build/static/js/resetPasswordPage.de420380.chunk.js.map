{"version":3,"file":"static/js/resetPasswordPage.de420380.chunk.js","mappings":"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","sources":["pages/account/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\n\nimport { FormButton, FormField, FormikForm } from \"../../components/form\";\nimport {\n\tError,\n\tSuccess\n} from '../../components/response';\n\nimport { LOGIN } from \"../../constants/routes\";\nimport { resetPassword } from \"../../services/accountAPI\";\n\nconst ResetPasswordPage = () => {\n    const { token } = useParams();\n\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [resetStatus, setResetStatus] = useState(null);\n\n    const handleClick = async (values, setSubmitting, resetForm) => {\n        delete values[\"confirm_password\"];\n        setError(null);\n        try {\n            const response = await resetPassword(values);\n            setResetStatus(\"success\");\n            if (response.status === 200)\n                setStatus(JSON.stringify(response?.data));\n        } catch (error) {\n            setError(error.message);\n            setResetStatus(\"error\");\n        } finally {\n            setSubmitting(false);\n            resetForm();\n        }\n    };\n\n    return (\n        <Container>\n            <Row\n                className=\"justify-content-center align-items-center mx-0\"\n                style={{ minHeight: \"70vh\" }}\n            >\n                {resetStatus === \"success\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Success\n                            title=\"Password Reset Successful!\"\n                            status={status}\n                        >\n                            <>Please log in using your new password.</>\n                            <br/>\n                            <Link className=\"btn btn-dark mt-4\" to={LOGIN}>login</Link>\n                        </Success>\n                    </Col>\n                )}\n                {resetStatus === \"error\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Error\n                            title=\"Password Reset Failed\"\n                            error={error}\n                            action={() => setResetStatus(null)}\n                        />\n                    </Col>\n                )}\n                {resetStatus === null && (\n                <Col xs={12} md={9} lg={8} xl={7}>\n                    <h1 className=\"text-center mb-4\">Reset Your Password</h1>\n                    <FormikForm\n                        initialValues={{\n                            password: \"\",\n                            confirm_password: \"\",\n                            token: token\n                        }}\n                        validationSchema={Yup.object().shape({\n                            password: Yup.string()\n                                .label(\"Password\")\n                                .required('Password is required')\n                                .min(8, 'Your password is too short.'),\n                            confirm_password: Yup.string().required(\"Please type your password again\")\n                                .oneOf([Yup.ref('password')], 'Passwords must match'),\n                            token: Yup.string()\n                                .label(\"Token\")\n                                .required('token is required')\n                        })}\n                            \n                        onSubmit={async (values, { setSubmitting, resetForm }) =>\n                            handleClick(values, setSubmitting, resetForm)\n                        }\n                    >\n                        <FormField\n                            label=\"Enter New Password\"\n                            type=\"password\"\n                            name=\"password\"\n                        />\n                        <FormField\n                            label=\"Confirm New Password\"\n                            type=\"password\"\n                            name=\"confirm_password\"\n                        />\n                        <FormField\n                            type=\"hidden\"\n                            name=\"token\"\n                        />\n\n                        <div className=\"d-grid col-9 col-mobile-8 col-sm-5 col-md-4 col-lg-3 mx-auto mb-4\">\n                            <FormButton>Reset</FormButton>\n                        </div>\n                    </FormikForm>\n                </Col>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\n\nexport default ResetPasswordPage;\n"],"names":["token","useParams","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","_useState5","_useState6","resetStatus","setResetStatus","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","response","wrap","_context","prev","next","resetPassword","sent","JSON","stringify","data","t0","message","finish","stop","_x","_x2","_x3","apply","arguments","_jsx","Container","children","_jsxs","Row","className","style","minHeight","Col","xs","md","lg","Success","title","_Fragment","Link","to","LOGIN","Error","action","xl","FormikForm","initialValues","password","confirm_password","validationSchema","Yup","shape","label","required","min","oneOf","onSubmit","_ref3","_callee2","_ref2","_context2","abrupt","_x4","_x5","FormField","type","name","FormButton"],"sourceRoot":""}