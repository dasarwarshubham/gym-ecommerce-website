{"version":3,"file":"static/js/forgotPasswordPage.87810de6.chunk.js","mappings":"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","sources":["pages/account/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\nimport {\n    FormButton,\n    FormField,\n    FormikForm,\n} from \"../../components/form\";\n\nimport {\n    Error,\n    Success\n} from '../../components/response';\n\n\nimport { forgotPassword } from \"../../services/accountAPI\";\n\nconst ResetPasswordPage = () => {\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [resetStatus, setResetStatus] = useState(null);\n\n    const handleClick = async (values, setSubmitting, resetForm) => {\n        setError(null);\n        try {\n            const response = await forgotPassword(values);\n            setResetStatus(\"success\");\n            if (response.status === 200)\n                setStatus(JSON.stringify(response?.data));\n        } catch (error) {\n            setError(error.message);\n            setResetStatus(\"error\");\n        } finally {\n            setSubmitting(false);\n            resetForm();\n        }\n    };\n\n    return (\n        <Container>\n            <Row\n                className=\"justify-content-center align-items-center mx-0\"\n                style={{ minHeight: \"70vh\" }}\n            >\n                {resetStatus === \"success\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Success\n                            title=\"Password Reset Success\"\n                            status={status}\n                        >\n                            Password reset successful! Check your email for instructions.\n                        </Success>\n                    </Col>\n                )}\n                {resetStatus === \"error\" && (\n                    <Col xs={12} md={7} lg={6}>\n                        <Error\n                            title=\"Password Reset Failed\"\n                            error={error}\n                            action={() => setResetStatus(null)}\n                        />\n                    </Col>\n                )}\n                {resetStatus === null && (\n                    <Col xs={12} md={9} lg={8} xl={7}>\n                        <h1 className=\"text-center mb-4\">Reset Your Password</h1>\n                        <FormikForm\n                            initialValues={{\n                                email: \"\",\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string().required().email().label(\"Email\"),\n                            })}\n                            onSubmit={async (values, { setSubmitting, resetForm }) =>\n                                handleClick(values, setSubmitting, resetForm)\n                            }\n                        >\n                            <FormField\n                                label=\"Enter your Email\"\n                                type=\"email\"\n                                name=\"email\"\n                            />\n\n                            <div className=\"d-grid col-9 col-mobile-8 col-sm-5 col-md-4 col-lg-3 mx-auto mb-4\">\n                                <FormButton>Reset Password</FormButton>\n                            </div>\n                        </FormikForm>\n                    </Col>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\n\nexport default ResetPasswordPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","_useState5","_useState6","resetStatus","setResetStatus","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","response","wrap","_context","prev","next","forgotPassword","sent","JSON","stringify","data","t0","message","finish","stop","_x","_x2","_x3","apply","arguments","_jsx","Container","children","_jsxs","Row","className","style","minHeight","Col","xs","md","lg","Success","title","Error","action","xl","FormikForm","initialValues","email","validationSchema","Yup","shape","required","label","onSubmit","_ref3","_callee2","_ref2","_context2","abrupt","_x4","_x5","FormField","type","name","FormButton"],"sourceRoot":""}