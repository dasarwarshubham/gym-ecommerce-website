{"version":3,"file":"static/js/resetPasswordPage.174e4819.chunk.js","mappings":"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","sources":["pages/account/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\n\nimport { FormButton, FormField, FormikForm } from \"../../components/form\";\nimport {\n    Error,\n    Success\n} from '../../components/response';\n\nimport { LOGIN } from \"../../constants/routes\";\nimport { resetPassword } from \"../../services/accountAPI\";\n\nconst ResetPasswordPage = () => {\n    const { token } = useParams();\n\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [resetStatus, setResetStatus] = useState(null);\n\n    const handleClick = async (values, setSubmitting, resetForm) => {\n        delete values[\"confirm_password\"];\n        setError(null);\n        try {\n            const response = await resetPassword(values);\n            setResetStatus(\"success\");\n            if (response.status === 200)\n                setStatus(JSON.stringify(response?.data));\n        } catch (error) {\n            setError(error.message);\n            setResetStatus(\"error\");\n        } finally {\n            setSubmitting(false);\n            resetForm();\n        }\n    };\n\n    return (\n        <>\n            <Helmet>\n                <link rel=\"canonical\" href={`https://fitflex.site/reset-password/${token}`} />\n\n                <meta name=\"description\" content=\"Reset your password with Fitflex. Use the provided reset token to securely set a new password for your account.\" />\n                <meta name=\"keywords\" content=\"Reset Password, New Password, Account Security, Reset Token\" />\n\n                <meta property=\"og:title\" content=\"Reset Password | Fitflex - Set a New Password\" />\n                <meta property=\"og:description\" content=\"Reset your password with Fitflex. Use the provided reset token to securely set a new password for your account.\" />\n                <meta property=\"og:url\" content={`https://fitflex.site/reset-password/${token}`} />\n\n                <meta name=\"twitter:title\" content=\"Reset Password | Fitflex - Set a New Password\" />\n                <meta name=\"twitter:description\" content=\"Reset your password with Fitflex. Use the provided reset token to securely set a new password for your account.\" />\n\n                <title>Reset Password | Fitflex - Set a New Password</title>\n            </Helmet>\n            <Container>\n                <Row\n                    className=\"justify-content-center align-items-center mx-0\"\n                    style={{ minHeight: \"70vh\" }}\n                >\n                    {resetStatus === \"success\" && (\n                        <Col xs={12} md={7} lg={6}>\n                            <Success\n                                title=\"Password Reset Successful!\"\n                                status={status}\n                            >\n                                <>Please log in using your new password.</>\n                                <br />\n                                <Link className=\"btn btn-dark mt-4\" to={LOGIN}>login</Link>\n                            </Success>\n                        </Col>\n                    )}\n                    {resetStatus === \"error\" && (\n                        <Col xs={12} md={7} lg={6}>\n                            <Error\n                                title=\"Password Reset Failed\"\n                                error={error}\n                                action={() => setResetStatus(null)}\n                            />\n                        </Col>\n                    )}\n                    {resetStatus === null && (\n                        <Col xs={12} md={9} lg={8} xl={7}>\n                            <h1 className=\"text-center mb-4\">Reset Your Password</h1>\n                            <FormikForm\n                                initialValues={{\n                                    password: \"\",\n                                    confirm_password: \"\",\n                                    token: token\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    password: Yup.string()\n                                        .label(\"Password\")\n                                        .required('Password is required')\n                                        .min(8, 'Your password is too short.'),\n                                    confirm_password: Yup.string().required(\"Please type your password again\")\n                                        .oneOf([Yup.ref('password')], 'Passwords must match'),\n                                    token: Yup.string()\n                                        .label(\"Token\")\n                                        .required('token is required')\n                                })}\n\n                                onSubmit={async (values, { setSubmitting, resetForm }) =>\n                                    handleClick(values, setSubmitting, resetForm)\n                                }\n                            >\n                                <FormField\n                                    label=\"Enter New Password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                />\n                                <FormField\n                                    label=\"Confirm New Password\"\n                                    type=\"password\"\n                                    name=\"confirm_password\"\n                                />\n                                <FormField\n                                    type=\"hidden\"\n                                    name=\"token\"\n                                />\n\n                                <div className=\"d-grid col-9 col-mobile-8 col-sm-5 col-md-4 col-lg-3 mx-auto mb-4\">\n                                    <FormButton>Reset</FormButton>\n                                </div>\n                            </FormikForm>\n                        </Col>\n                    )}\n                </Row>\n            </Container>\n        </>\n    );\n};\n\n\nexport default ResetPasswordPage;\n"],"names":["token","useParams","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","_useState5","_useState6","resetStatus","setResetStatus","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","response","wrap","_context","prev","next","resetPassword","sent","JSON","stringify","data","t0","message","finish","stop","_x","_x2","_x3","apply","arguments","_jsxs","_Fragment","children","Helmet","_jsx","rel","href","concat","name","content","property","Container","Row","className","style","minHeight","Col","xs","md","lg","Success","title","Link","to","LOGIN","Error","action","xl","FormikForm","initialValues","password","confirm_password","validationSchema","Yup","shape","label","required","min","oneOf","onSubmit","_ref3","_callee2","_ref2","_context2","abrupt","_x4","_x5","FormField","type","FormButton"],"sourceRoot":""}