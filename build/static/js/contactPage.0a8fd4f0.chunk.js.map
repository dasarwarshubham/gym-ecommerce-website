{"version":3,"file":"static/js/contactPage.0a8fd4f0.chunk.js","mappings":"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","sources":["components/form/Form.js","components/form/FormField.js","components/form/FormButton.js","components/form/FormRadio.js","components/response/Error.js","components/response/Success.js","pages/Contact.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nfunction FormikForm({\n  initialValues,\n  onSubmit,\n  validationSchema,\n  enableReinitialize,\n  children,\n  ...otherProps\n}) {\n  return (\n    <Formik\n      enableReinitialize={enableReinitialize}\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {() => <Form {...otherProps}>{children}</Form>}\n    </Formik>\n  );\n}\n\nexport default FormikForm;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\nimport { FormSelect } from \"react-bootstrap\";\n\nconst FormField = ({\n  label,\n  araiLabel,\n  type = \"text\",\n  modal = false,\n  name,\n  fieldClass,\n  children,\n  ...otherProps\n}) => {\n  const { handleChange, values, errors, touched, setFieldValue } =\n    useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        {label && (\n          <FormLabel column xs={12} md={4}>\n            {label}\n          </FormLabel>\n        )}\n        <Col xs={12} md={8}>\n          {type === \"select\" ? (\n            <FormSelect\n              aria-label={label}\n              name={name}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormSelect>\n          ) : (\n            <FormControl\n              aria-label={label}\n              type={type}\n              name={name}\n              value={values[name]}\n              onChange={handleChange}\n              isInvalid={touched[name] && !!errors[name]}\n              placeholder=\"Type here\"\n              {...otherProps}\n            >\n              {children}\n            </FormControl>\n          )}\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  if (type === \"select\") {\n    return (\n      <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n        {label && (\n          <FormLabel>{label}</FormLabel>\n        )}\n        <FormSelect\n          aria-label={label}\n          name={name}\n          onChange={handleChange}\n          isInvalid={touched[name] && !!errors[name]}\n          placeholder=\"Type here\"\n          {...otherProps}\n        >\n          {children}\n        </FormSelect>\n        <Feedback type=\"invalid\">{errors[name]}</Feedback>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      {label && (\n        <FormLabel>{label}</FormLabel>\n      )}\n      <FormControl\n        aria-label={label}\n        type={type}\n        name={name}\n        value={type === \"file\" ? null : values[name]}\n        onChange={\n          type !== \"file\"\n            ? handleChange\n            : (event) => setFieldValue(name, event.target.files[0])\n        }\n        isInvalid={touched[name] && !!errors[name]}\n        placeholder=\"Type here\"\n        {...otherProps}\n      >\n        {children}\n      </FormControl>\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useFormikContext } from \"formik\";\n\nconst FormButton = ({\n  variant = \"primary\",\n  type = \"submit\",\n  children,\n  ...otherProps\n}) => {\n  const { handleSubmit, isSubmitting } = useFormikContext();\n  return (\n    <Button\n      variant={variant}\n      onClick={!isSubmitting ? handleSubmit : null}\n      disabled={isSubmitting}\n      type={type}\n      style={{ minWidth: \"120px\" }}\n      {...otherProps}\n    >\n      {isSubmitting ? (\n        <Spinner as=\"span\" size=\"sm\" animation=\"border\" />\n      ) : (\n        children\n      )}\n    </Button>\n  );\n};\n\nexport default FormButton;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useFormikContext } from \"formik\";\n\nconst FormRadio = ({\n  label,\n  araiLabel,\n  modal = false,\n  type = \"radio\",\n  name,\n  fieldClass,\n  children,\n  options,\n  ...otherProps\n}) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  if (modal) {\n    return (\n      <FormGroup\n        as={Row}\n        controlId={name}\n        className={fieldClass ? fieldClass : \"mb-3\"}\n      >\n        <FormLabel column xs={12} md={4}>\n          {label}\n        </FormLabel>\n        <Col xs={12} md={8}>\n          <div key={`inline-radio`} className=\"h-100 d-flex align-items-center\">\n            {options.map((option) => (\n              <FormCheck\n                inline\n                label={option.label}\n                name={name}\n                type={type}\n                aria-label={option.label}\n                onChange={() => setFieldValue(name, option.value)}\n                id={`inline-radio-${option.value}`}\n                key={`inline-radio-${option.value}`}\n                isInvalid={touched[name] && !!errors[name]}\n                checked={option.value === values[name]}\n                {...otherProps}\n              />\n            ))}\n          </div>\n          <Feedback type=\"invalid\">{errors[name]}</Feedback>\n        </Col>\n      </FormGroup>\n    );\n  }\n  return (\n    <FormGroup controlId={name} className={fieldClass ? fieldClass : \"mb-5\"}>\n      <FormLabel>{label}</FormLabel>\n      <br />\n      {options.map((option) => (\n        <FormCheck\n          inline\n          label={option.label}\n          name={name}\n          type={type}\n          aria-label={option.label}\n          onChange={() => setFieldValue(name, option.value)}\n          id={`inline-radio-${option.value}`}\n          key={`inline-radio-${option.value}`}\n          isInvalid={touched[name] && !!errors[name]}\n          checked={option.value === values[name]}\n          {...otherProps}\n        />\n      ))}\n      <Feedback type=\"invalid\">{errors[name]}</Feedback>\n    </FormGroup>\n  );\n};\n\nexport default FormRadio;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport Button from \"react-bootstrap/Button\";\nimport BsCard from \"react-bootstrap/Card\";\nimport { FaCircleExclamation } from \"react-icons/fa6\";\n\nconst Card = styled(BsCard)`\n  background-color: #ffe4e4;\n  border: 1px solid #dc3545;\n  border-radius: 5px;\n  padding: 20px;\n  text-align: center;\n\n  .error-icon {\n    font-size: 48px;\n    color: #dc3545;\n    margin-bottom: 3rem;\n  }\n\n  .error-button {\n    margin-top: 20px;\n  }\n`;\n\nconst Error = ({ title, action, error }) => {\n  return (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <FaCircleExclamation className=\"error-icon\" />\n        <Card.Title className=\"text-danger text-center\">{title}</Card.Title>\n        <Card.Text className=\"text-center\">\n          {error || <>An error occurred. Please try again.</>}\n        </Card.Text>\n        <Button variant=\"danger\" className=\"error-button\" onClick={action}>\n          Retry\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nimport BsCard from 'react-bootstrap/Card';\nimport { FaRegCircleCheck } from 'react-icons/fa6';\n\nconst Card = styled(BsCard)`\n    background-color: #f3ffef;\n    border: 1px solid #198754;\n    border-radius: 5px;\n    padding: 20px;\n    text-align: center;\n\n    .success-icon {\n        font-size: 48px;\n        color: #198754;\n        margin-bottom: 3rem;\n    }\n`;\n\nconst Success = ({ children, title, status }) => {\n    return (\n        <Card className=\"mt-4\">\n            <Card.Body>\n                <FaRegCircleCheck className='success-icon' />\n                {title && (\n                    <Card.Title className=\"text-success text-center\">\n                        {title}\n                    </Card.Title>\n                )}\n                <Card.Text className=\"text-center\">\n                    {status && <>{status}<br/></>}\n                    {children}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default Success;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport * as Yup from \"yup\";\nimport {\n  FormButton,\n  FormField,\n  FormikForm\n} from \"../components/form\";\nimport {\n  Error,\n  Success\n} from '../components/response';\n\nimport { publicAxios } from \"../services/axiosInstance\";\n\nimport { API_ROUTES, EMAIL, HOME } from \"../constants/routes\";\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email ID\"),\n  subject: Yup.string().required().label(\"Subject\"),\n  message: Yup.string()\n    .required(\"Enter your message\")\n    .label(\"Message\")\n    .max(600),\n});\n\n\nconst ContactPage = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  const handleClick = async (values, setSubmitting, resetForm) => {\n    await publicAxios({\n      method: \"POST\",\n      url: `${API_ROUTES.contact}`,\n      data: values,\n    }).then(() => {\n      setStatus(\"success\");\n    }).catch((error) => {\n      setStatus(\"error\");\n      setError(error);\n      console.log(error);\n    }).finally(() => {\n      setSubmitting(false);\n      resetForm();\n    })\n  };\n  return (\n    <Container className=\"my-5 py-5\">\n      <Row className=\"justify-content-center align-items-center mx-0\">\n        {status === \"success\" && (\n          <Col xs={12} md={7} lg={6}>\n            <Success title=\"Message recieved successfully!\">\n              <>We will contact you shortly.</>\n              <br />\n              <Link className=\"btn btn-dark mt-4\" to={HOME}>Continue</Link>\n            </Success>\n          </Col>\n        )}\n        {status === \"error\" && (\n          <Col xs={12} md={7} lg={6}>\n            <Error\n              title=\"Message not sent\"\n              error={error}\n              action={() => setStatus(null)}\n            />\n          </Col>\n        )}\n        {status === null && (\n          <>\n            <Col xs={12} md={9} lg={8} xl={7} className=\"text-center text-sm-start\">\n              <h1>Get in Touch</h1>\n              <p className=\"mb-5\">Let's Make Your Fitness Journey Extraordinary!</p>\n            </Col>\n            <Col xs={12} md={9} lg={8} xl={7}>\n              <FormikForm\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values, { setSubmitting, resetForm }) =>\n                  handleClick(values, setSubmitting, resetForm)\n                }\n              >\n                <FormField label=\"Name\" name=\"name\" />\n                <FormField label=\"Email address\" type=\"email\" name=\"email\" />\n                <FormField label=\"Subject\" name=\"subject\" />\n                <FormField\n                  label=\"Write a message\"\n                  as=\"textarea\"\n                  style={{ minHeight: \"200px\" }}\n                  name=\"message\"\n                />\n\n                <div className=\"d-grid col-12 col-sm-5 col-md-4 mb-5 justify-content-center justify-content-sm-start\">\n                  <FormButton>Submit</FormButton>\n                </div>\n\n                <p className=\"text-center text-sm-start\">\n                  Or email us at&nbsp;\n                  <a variant=\"link\" href={EMAIL}>\n                    hello.fitflex@gmail.com\n                  </a>\n                </p>\n              </FormikForm>\n            </Col>\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ContactPage;\n"],"names":["_ref","initialValues","onSubmit","validationSchema","enableReinitialize","children","otherProps","_objectWithoutProperties","_excluded","_jsx","Formik","Form","_objectSpread","label","_ref$type","araiLabel","type","_ref$modal","modal","name","fieldClass","_useFormikContext","useFormikContext","handleChange","values","errors","touched","setFieldValue","_jsxs","FormGroup","as","Row","controlId","className","FormLabel","column","xs","md","Col","FormSelect","onChange","isInvalid","placeholder","FormControl","value","Feedback","event","target","files","_ref$variant","variant","handleSubmit","isSubmitting","Button","onClick","disabled","style","minWidth","Spinner","size","animation","options","map","option","FormCheck","inline","id","concat","checked","Card","styled","BsCard","withConfig","displayName","componentId","title","action","error","Body","FaCircleExclamation","Title","Text","_Fragment","status","FaRegCircleCheck","email","subject","message","Yup","shape","required","max","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","setStatus","handleClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setSubmitting","resetForm","wrap","_context","prev","next","publicAxios","method","url","API_ROUTES","contact","data","then","catch","console","log","finally","stop","_x","_x2","_x3","apply","arguments","Container","lg","Success","Link","to","HOME","Error","xl","FormikForm","_ref2","FormField","minHeight","FormButton","href","EMAIL"],"sourceRoot":""}