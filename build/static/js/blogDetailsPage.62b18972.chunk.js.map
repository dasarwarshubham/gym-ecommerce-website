{"version":3,"file":"static/js/blogDetailsPage.62b18972.chunk.js","mappings":"kJAkCA,IA/BuB,SAACA,GACtB,IAAAC,GAAsCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WACJF,GAAeL,IACbQ,MAAMC,QAAQT,IAASA,EAAKU,OAAS,EACvCJ,GAAe,GACLE,MAAMC,QAAQT,IAAkB,OAATA,GACjCM,GAAe,GAGrB,GAAG,CAACD,EAAaL,IAiBjB,MAAO,CAAEK,YAAAA,EAAaM,aAfD,WACnB,OAAIN,GAEAO,EAAAA,EAAAA,MAAA,OACEC,UAAU,mDACVC,MAAO,CAAEC,OAAQ,QAASC,SAAA,EAE1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,SAASC,QAAQ,SAAS,gBAK5C,IACT,EAGF,C,8ICiCA,UA1CwB,WACtB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAClBxB,GAAgByB,EAAAA,EAAAA,GAAeL,GAA/BpB,YAOR,IALAE,EAAAA,EAAAA,YAAU,WACRgB,GAASQ,EAAAA,EAAAA,GAAYV,GAEvB,GAAG,CAACA,IAEAhB,IAAgBuB,EAClB,OAAOX,EAAAA,EAAAA,KAACe,EAAAA,EAAM,IAGhB,GAAIJ,EACF,OACEX,EAAAA,EAAAA,KAAA,OACEJ,UAAU,mDACVC,MAAO,CAAEC,OAAQ,QAASC,UAE1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKY,MAKX,IAEMK,EADO,IAAIC,KAAKT,EAAYU,YACTC,mBAAmB,QAF5B,CAAEC,IAAK,UAAWC,MAAO,OAAQC,KAAM,YAIvD,OACE3B,EAAAA,EAAAA,MAAC4B,EAAAA,EAAS,CAAC3B,UAAU,YAAYC,MAAO,CAAE2B,UAAW,QAASzB,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,mBAAkBG,SAAa,OAAXS,QAAW,IAAXA,OAAW,EAAXA,EAAaiB,SAC/CzB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,yBAAyB8B,wBAAyB,CAAEC,OAAQC,IAAAA,SAA8B,OAAXpB,QAAW,IAAXA,OAAW,EAAXA,EAAaqB,QAAS,CAAEC,aAAc,CAAEC,MAAM,SAC5IpC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMG,SAAA,CAAC,qBAAmBiB,OAG7C,C,8IC7DMgB,EAAkB,SAACC,GAAK,OAAKA,EAAMC,KAAM,EAElCC,GAAiBC,EAAAA,EAAAA,IAC5B,CAACJ,IACD,SAACK,GAAS,OAAKA,EAAUC,QAAQ,IAGtBC,GAAkBH,EAAAA,EAAAA,IAC7B,CAACJ,IACD,SAACK,GAAS,OAAKA,EAAUG,SAAS,IAGvB9B,GAAqB0B,EAAAA,EAAAA,IAChC,CAACJ,IACD,SAACK,GAAS,OAAKA,EAAU7B,WAAW,IAQzBI,IALsBwB,EAAAA,EAAAA,IACjC,CAACJ,IACD,SAACK,GAAS,OAAKA,EAAUI,OAAO,KAGPL,EAAAA,EAAAA,IACzB,CAACJ,IACD,SAACK,GAAS,OAAKA,EAAU1B,KAAK,I","sources":["hooks/useInitialLoad.js","pages/blogs/BlogDetails.js","redux/blog/blogSelectors.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst useInitialLoad = (data) => {\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  useEffect(() => {\n    if (initialLoad && data) {\n      if (Array.isArray(data) && data.length > 0) {\n        setInitialLoad(false);\n      } else if (!Array.isArray(data) && data !== null) {\n        setInitialLoad(false);\n      }\n    }\n  }, [initialLoad, data]);\n\n  const renderLoader = () => {\n    if (initialLoad) {\n      return (\n        <div\n          className=\"d-flex justify-content-center align-items-center\"\n          style={{ height: \"65vh\" }}\n        >\n          <Spinner animation=\"border\" variant=\"dark\" />\n          loading...\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return { initialLoad, renderLoader };\n};\n\nexport default useInitialLoad;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport DOMPurify from 'dompurify';\n\n// import custom hooks\nimport useInitialLoad from \"../../hooks/useInitialLoad\";\n\n// import required Components\nimport { Container } from \"react-bootstrap\";\nimport Loader from \"../../components/loader/Loader\";\n\n// import required redux selectors\nimport {\n  // selectLoadingStatus,\n  selectSelectedBlog,\n  selectError,\n} from \"../../redux/blog/blogSelectors\";\n\n// import required redux actions\nimport { getBlogById } from \"../../redux/blog/blogActions\";\n\nconst BlogDetailsPage = () => {\n  const { blogId } = useParams();\n\n  const dispatch = useDispatch();\n  // const loading = useSelector(selectLoadingStatus);\n  const blogDetails = useSelector(selectSelectedBlog);\n  const error = useSelector(selectError);\n  const { initialLoad } = useInitialLoad(blogDetails);\n\n  useEffect(() => {\n    dispatch(getBlogById(blogId));\n    // eslint-disable-next-line\n  }, [blogId]);\n\n  if (initialLoad && !error) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"75vh\" }}\n      >\n        <h1>{error}</h1>\n      </div>\n    );\n  }\n\n  const options = { day: 'numeric', month: 'long', year: 'numeric' };\n  const date = new Date(blogDetails.created_at);\n  const publishDate = date.toLocaleDateString(\"en-US\", options);\n\n  return (\n    <Container className=\"my-5 py-5\" style={{ minHeight: \"65vh\" }}>\n      <h2 className=\"text-center mb-5\">{blogDetails?.title}</h2>\n      <div className=\"blog-details-container\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(blogDetails?.content, { USE_PROFILES: { html: true } }) }}></div>\n      <p className=\"my-4\">Blog published on {publishDate}</p>\n    </Container>\n  );\n};\n\nexport default BlogDetailsPage;\n","import { createSelector } from \"reselect\";\n\nconst selectBlogSlice = (state) => state.blogs;\n\nexport const selectAllBlogs = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogList\n);\n\nexport const selectBlogCount = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogCount\n);\n\nexport const selectSelectedBlog = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.blogDetails\n);\n\nexport const selectLoadingStatus = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.loading\n);\n\nexport const selectError = createSelector(\n  [selectBlogSlice],\n  (blogSlice) => blogSlice.error\n);\n\n// export const selectAllBlogs = createSelector(\n//   [selectBlogSlice, selectLoadingStatus],\n//   (blogSlice, loading) => ({\n//     blogs: blogSlice.blogList,\n//     loading,\n//   })\n// );\n"],"names":["data","_useState","useState","_useState2","_slicedToArray","initialLoad","setInitialLoad","useEffect","Array","isArray","length","renderLoader","_jsxs","className","style","height","children","_jsx","Spinner","animation","variant","blogId","useParams","dispatch","useDispatch","blogDetails","useSelector","selectSelectedBlog","error","selectError","useInitialLoad","getBlogById","Loader","publishDate","Date","created_at","toLocaleDateString","day","month","year","Container","minHeight","title","dangerouslySetInnerHTML","__html","DOMPurify","content","USE_PROFILES","html","selectBlogSlice","state","blogs","selectAllBlogs","createSelector","blogSlice","blogList","selectBlogCount","blogCount","loading"],"sourceRoot":""}