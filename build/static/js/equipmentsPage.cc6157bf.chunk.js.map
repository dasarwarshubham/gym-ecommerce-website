{"version":3,"file":"static/js/equipmentsPage.cc6157bf.chunk.js","mappings":"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","sources":["components/cards/EquipmentCard.js","pages/equipments/Equipments.js","redux/product/productSelectors.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { MdCheckCircle, MdOutlineAddShoppingCart, MdOutlineRemoveShoppingCart } from \"react-icons/md\";\nimport { CART, EQUIPMENTS } from \"../../constants/routes\";\n\nimport { addItem, fetchCart } from \"../../redux/checkout/cartActions\";\nimport { selectCartItems } from \"../../redux/checkout/cartSelectors\";\n\nconst EquipmentCard = ({ data }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n\n  const alreadyInCart = cartItems?.find(\n    (cartItem) => cartItem.product.id === data.id\n  );\n\n  const handleAddToCart = () => {\n    if (alreadyInCart) {\n      navigate(CART);\n    } else {\n      dispatch(\n        addItem({\n          product_id: data.id,\n          quantity: 1,\n        })\n      ).then(() => {\n        dispatch(fetchCart());\n      });\n    }\n  };\n\n  return (\n    <Card className=\"border-0 shadow h-100 text-decoration-none\">\n      <div style={{ position: \"relative\" }} className=\"ratio ratio-12x10\">\n        <Card.Img\n          variant=\"top\"\n          src={data.image}\n          alt={data.title?.replaceAll('-', '')}\n          className=\"img-fluid w-100 object-fit-cover\"\n        />\n        <Link\n          aria-label={`Go to ${data.title?.replaceAll('-', '')} page`}\n          to={`${EQUIPMENTS}/${data.category}/${data.slug}`}\n          style={{ position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0 }}\n        />\n      </div>\n      <Card.Body className=\"d-flex flex-column justify-content-between\">\n        <div>\n          <Card.Title className=\"text-truncate\">{data.title}</Card.Title>\n          <Card.Text className=\"mb-3\">Price: ${data.price}</Card.Text>\n        </div>\n        <div className=\"d-grid\">\n          {data.out_of_stock ? (\n            <Button variant=\"outline\" className=\"border border-dark text-muted\" onClick={() => null}>\n              Out of Stock&nbsp;\n              <MdOutlineRemoveShoppingCart />\n            </Button>\n          ) : (\n            <Button variant=\"primary\" onClick={handleAddToCart}>\n              {alreadyInCart ? (\n                <>\n                  Added To Cart&nbsp;\n                  <MdCheckCircle color=\"green\" />\n                </>\n              ) : (\n                <>\n                  Add to Cart&nbsp;\n                  <MdOutlineAddShoppingCart />\n                </>\n              )}\n            </Button>\n          )}\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default EquipmentCard;\n","import React, { useEffect } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n\n// import custom hook\nimport useInitialLoad from \"../../hooks/useInitialLoad\";\n\n// import required Components\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport EquipmentCard from \"../../components/cards/EquipmentCard\";\nimport Loader from \"../../components/loader/Loader\";\n\nimport MyPagination from \"../../components/pagination\";\nimport {\n  FormButton,\n  FormField,\n  FormikForm,\n} from \"../../components/form\";\n\n// import required redux selectors\nimport {\n  selectAllProducts,\n  selectProductCount,\n  // selectLoadingStatus,\n  selectError,\n} from \"../../redux/product/productSelectors\";\n\n// import required redux actions\nimport { retrieveProducts } from \"../../redux/product/productActions\";\nimport { EQUIPMENTS } from \"../../constants/routes\";\nimport { MdOutlineSearch } from \"react-icons/md\";\n\nconst EquipmentsPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate()\n  const { categoryId } = useParams();\n  const dispatch = useDispatch();\n\n  // const loading = useSelector(selectLoadingStatus);\n  const equipments = useSelector(selectAllProducts);\n  const productCount = useSelector(selectProductCount);\n  const error = useSelector(selectError);\n\n  const { initialLoad } = useInitialLoad(equipments);\n\n  const queryParams = new URLSearchParams(location.search);\n  const currentPage = parseInt(queryParams.get('page')) || 1;\n  const searchQuery = queryParams.get('search');\n  const productPerPage = 20;\n  const totalPages = Math.ceil(productCount / productPerPage); // (productCount/productPerPage)\n\n  // const handlePageChange = (page) => {\n  //   let newURL = `${EQUIPMENTS}?page=${page}`;\n  //   if (searchQuery && categoryId) {\n  //     newURL = `${EQUIPMENTS}/${categoryId}?search=${searchQuery}&page=${page}`;\n  //   } else if (searchQuery) {\n  //     newURL = `${EQUIPMENTS}/?search=${searchQuery}&page=${page}`;\n  //   } else if (categoryId) {\n  //     newURL = `${EQUIPMENTS}/${categoryId}?page=${page}`;\n  //   }\n  //   navigate(newURL);\n  // };\n  const handlePageChange = (page) => {\n    let newURL = `${EQUIPMENTS}?page=${page}`;\n    if (searchQuery && categoryId) {\n      newURL = `${EQUIPMENTS}/${categoryId}?search=${searchQuery}&page=${page}`;\n    } else if (searchQuery) {\n      newURL = `${EQUIPMENTS}/?search=${searchQuery}&page=${page}`;\n    } else if (categoryId) {\n      newURL = `${EQUIPMENTS}/${categoryId}?page=${page}`;\n    }\n    navigate(newURL);\n  };\n\n  useEffect(() => {\n    dispatch(retrieveProducts({ searchQuery, categoryId, currentPage }));\n  }, [dispatch, searchQuery, categoryId, currentPage]);\n\n  // const handleClick = async (values, setSubmitting, resetForm) => {\n  //   if (values.category) {\n  //     navigate(`${EQUIPMENTS}/${values.category}?search=${values.search}`)\n  //   } else {\n  //     navigate(`${EQUIPMENTS}/?search=${values.search}`)\n  //   }\n  // };\n\n  const handleClick = async (values, setSubmitting, resetForm) => {\n    navigate(`${EQUIPMENTS}/?search=${values.search}`)\n  };\n\n  if (initialLoad && !error) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"75vh\" }}\n      >\n        <h1>{error}</h1>\n      </div>\n    );\n  }\n  if (productCount > 0) {\n    return (\n      <Container className=\"my-5 py-5\" style={{ minHeight: \"65vh\" }}>\n        <Row className=\"g-5 mx-0 mb-5 justify-content-center\">\n          <Col xs={12} lg={9} xl={7}>\n            <FormikForm\n              initialValues={{\n                search: \"\",\n                page: currentPage,\n                category: categoryId\n              }}\n              validationSchema={Yup.object().shape({\n                search: Yup.string().required().label(\"Search\"),\n              })}\n              onSubmit={async (values, { setSubmitting, resetForm }) =>\n                handleClick(values, setSubmitting, resetForm)\n              }\n              enableReinitialize\n              className=\"row mx-0 g-2 g-md-4\"\n            >\n              <FormField\n                name=\"search\"\n                placeholder=\"Search equipments here...\"\n                fieldClass=\"col col-md-9\"\n              />\n              <FormButton className=\"col-2 col-md-3\" style={{ minWidth: 'unset' }}>\n                <MdOutlineSearch size={20} />\n                <span className=\"d-none d-md-inline-flex\">\n                  Search\n                </span>\n              </FormButton>\n            </FormikForm>\n          </Col>\n        </Row>\n        <Row className=\"g-4 g-md-5 my-5 pb-5 mx-0\">\n          {equipments?.map((equipment) => (\n            <Col xs={6} lg={4} xl={3} key={`equipment-${equipment?.id}`}>\n              <EquipmentCard data={equipment} />\n            </Col>\n          ))}\n        </Row>\n        <MyPagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          handlePageChange={handlePageChange}\n        />\n      </Container>\n    );\n  } else {\n    return (\n      <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"65vh\" }}>\n        <p>We will soon add new products. Stay tuned.</p>\n      </Container>\n    )\n  }\n};\n\nexport default EquipmentsPage;\n","import { createSelector } from \"reselect\";\n\nconst selectProductSlice = (state) => state.products;\n\nexport const selectAllProducts = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.productList\n);\n\nexport const selectProductCount = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.productCount\n);\n\nexport const selectFeaturedProducts = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.featuredProductList\n);\n\nexport const selectAllCategories = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.categoryList\n);\n\nexport const selectSelectedProduct = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.productDetails\n);\n\nexport const selectLoadingStatus = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.loading\n);\n\nexport const selectError = createSelector(\n  [selectProductSlice],\n  (productSlice) => productSlice.error\n);\n\n// export const selectAllproducts = createSelector(\n//   [selectProductSlice, selectLoadingStatus],\n//   (productSlice, loading) => ({\n//     products: productSlice.productList,\n//     loading,\n//   })\n// );\n"],"names":["_ref","_data$title","_data$title2","data","navigate","useNavigate","dispatch","useDispatch","cartItems","useSelector","selectCartItems","alreadyInCart","find","cartItem","product","id","_jsxs","Card","className","children","style","position","_jsx","Img","variant","src","image","alt","title","replaceAll","Link","concat","to","EQUIPMENTS","category","slug","top","bottom","left","right","Body","Title","Text","price","out_of_stock","Button","onClick","MdOutlineRemoveShoppingCart","CART","addItem","product_id","quantity","then","fetchCart","_Fragment","MdCheckCircle","color","MdOutlineAddShoppingCart","location","useLocation","categoryId","useParams","equipments","selectAllProducts","productCount","selectProductCount","error","selectError","initialLoad","useInitialLoad","queryParams","URLSearchParams","search","currentPage","parseInt","get","searchQuery","totalPages","Math","ceil","useEffect","retrieveProducts","handleClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","wrap","_context","prev","next","stop","_x","_x2","_x3","apply","arguments","Loader","height","Container","minHeight","Row","Col","xs","lg","xl","FormikForm","initialValues","page","validationSchema","Yup","shape","required","label","onSubmit","_ref3","_callee2","_ref2","_context2","abrupt","_x4","_x5","enableReinitialize","FormField","name","placeholder","fieldClass","FormButton","minWidth","MdOutlineSearch","size","map","equipment","EquipmentCard","MyPagination","handlePageChange","newURL","selectProductSlice","state","products","createSelector","productSlice","productList","selectFeaturedProducts","featuredProductList","selectAllCategories","categoryList","selectSelectedProduct","productDetails","selectLoadingStatus","loading"],"sourceRoot":""}